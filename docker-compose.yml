version: '3.8'

services:
  # FastAPI Application
  app:
    build: .
    container_name: churn-prediction-api
    ports:
      - "8000:8000"
    volumes:
      - ./app:/app/app
      - ./models:/app/models
      - ./mlruns:/app/mlruns
    environment:
      - MLFLOW_TRACKING_URI=sqlite:///mlflow.db
    restart: unless-stopped
    networks:
      - mlops-network

  # Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    networks:
      - mlops-network
    depends_on:
      - app

  # Grafana
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    networks:
      - mlops-network
    depends_on:
      - prometheus

  # MLflow (optional, for viewing experiments)
  mlflow:
    image: python:3.10-slim
    container_name: mlflow-server
    ports:
      - "5000:5000"
    volumes:
      - ./mlruns:/mlruns
      - ./mlflow.db:/mlflow.db
    command: >
      sh -c "pip install mlflow && 
             mlflow server --host 0.0.0.0 --port 5000 
             --backend-store-uri sqlite:///mlflow.db 
             --default-artifact-root /mlruns"
    networks:
      - mlops-network

networks:
  mlops-network:
    driver: bridge

volumes:
  prometheus_data:
  grafana_data: